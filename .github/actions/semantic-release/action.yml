name: Semantic Release
description: Release

inputs:
  artifactName:
    description: Name of the uploaded build artifact
    default: build-artifact
    required: false
  artifactPath:
    description: Destination path for the downloaded build artifact
    default: dist
    required: false
  withoutBuiltArtifact:
    description: Indicates that no artifact should be downloaded
    required: false
  publishToNpm:
    description: Enable this to publish artifacts to NPM
    required: false
  GITHUB_TOKEN:
    description: Secret Cloudbeds Github token with write permission
    required: true
  NPM_TOKEN:
    description: Secret NPM token
    required: false

outputs:
  isReleased:
    description: Whether a new release was published. Contains "true" or "false" string
    value: ${{ steps.semantic-release.outputs.new_release_published }}
  releasedVersion:
    description: The version of the release that actually happened
    value: ${{ steps.semantic-release.outputs.new_release_version }}
  previousVersion:
    description: Version of the previous release, if there was one
    value: ${{ steps.semantic-release.outputs.last_release_version }}
  releasedSHA:
    description: The SHA of the commit that was released, that contains the [skip-ci] commit
    value: ${{ steps.released-sha.outputs.SHA }}

runs:
  using: composite
  steps:
    - name: Checkout
      # https://github.com/actions/checkout v3.1.0
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      with:
        token: ${{ inputs.GITHUB_TOKEN }}

    - if: inputs.withoutBuiltArtifact != 'true'
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifactName }}
        path: ${{ inputs.artifactPath }}

    - name: Create config file for Semantic Release
      shell: bash
      run: |
        cat << EOF > .releaserc
        {
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            "@semantic-release/changelog",
            ["@semantic-release/npm", {
              "npmPublish": ${{inputs.publishToNpm == 'true'}},
            }],  
            "@semantic-release/github",
            "@semantic-release/git"
          ]
        }
        EOF

    - name: Semantic Release
      # https://github.com/cycjimmy/semantic-release-action v3.1.2 (2022-10-19)
      uses: cycjimmy/semantic-release-action@be27b56c2b7c71f71285b5a52067a40ad8b4c516
      id: semantic-release
      with:
        branch: main
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ inputs.NPM_TOKEN }}

    - name: Output commit hash
      id: released-sha
      shell: bash
      run: |
        if [[ ${{ steps.semantic-release.outputs.new_release_published }} == true ]]; then
          echo "::notice::Application version was updated to ${{ steps.semantic-release.outputs.new_release_version }}"
        else
          echo "::warning::No new version is released"
          echo "::warning::Make sure that commit messages follow the semantic-release format"
        fi
        echo "SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
