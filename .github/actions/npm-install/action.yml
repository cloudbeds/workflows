name: Install NPM packages
description: Adds NPM token and install node modules

inputs:
  useNpmCI:
    description: Use npm ci instead of npm install
    default: 'true'
    required: false

runs:
  using: composite
  steps:
    - name: NPM cache fetch
      if: inputs.useNpmCI == 'false'
      uses: actions/cache/restore@v4
      id: npm-cache
      with:
        path: |
          node_modules
        key: v1-npm-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('package-lock.json') }}

    - name: Get node.js version from .nvmrc
      shell: bash
      run: |
        if [[ -f .nvmrc ]]; then
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
        fi

#    - name: Install particular version of node.js and initialize npm cache for global packages
#      uses: actions/setup-node@v4
#      with:
#        cache: npm
#        node-version: ${{ env.NODE_VERSION || '20' }}

    - name: Add NPM token to .npmrc
      shell: bash
      run:
        if [[ -n $NPM_TOKEN && ! -f .npmrc ]]; then
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc;
        fi

    - name: Install dependencies
      shell: bash
      run: |
        export HUSKY=0
        npm config set audit=false fund=false
        if [[ '${{ inputs.useNpmCI }}' == 'true' ]]; then 
          npm ci
        else
          npm install
        fi

    - name: NPM cache push
      uses: actions/cache/save@v4
      if: inputs.useNpmCI == 'false' && steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: |
          node_modules
        key: ${{ steps.npm-cache.outputs.cache-primary-key }}
