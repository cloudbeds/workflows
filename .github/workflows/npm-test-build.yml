# Generic workflow for a push event
# It should be used for all branches except `main` which should use the `*-release` workflow

name: Lint, Test and Build

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
    inputs:
      runner:
        description: The type of runner to use for build and test jobs
        required: false
        default: ubuntu-latest
        type: string
      artifactName:
        description: Name of the build artifact
        required: false
        default: build-artifact
        type: string
      artifactPath:
        description: Destination path for the downloaded build artifact
        required: false
        default: dist
        type: string
      envVars:
        description: List of environment variables to set up, given in VAR=value format.
        required: false
        default: ''
        type: string
      testCoverageAnnotations:
        description: Annotation type for test coverage should be 'all', 'none', 'coverage' or 'failed-tests'
        required: false
        default: coverage
        type: string
      writeBuildInfo:
        description: Whether to write build info to a file
        required: false
        default: false
        type: string

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        uses: cloudbeds/workflows/.github/actions/npm-install-lint@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  test:
    name: Test
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Test
        uses: cloudbeds/workflows/.github/actions/npm-install-test@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Find Current Pull Request
        if: steps.test.outputs.INCLUDE_COVERAGE_REPORT == 'true'
        id: findPr
        uses: jwalton/gh-find-current-pr@v1.3.2

      - name: Report Test Coverage
        if: steps.test.outputs.INCLUDE_COVERAGE_REPORT == 'true'
        uses: ArtiomTr/jest-coverage-report-action@v2.2.4
        with:
          prnumber: ${{ steps.findPr.outputs.number }}
          annotations: ${{ inputs.testCoverageAnnotations }}
          coverage-file: report.json
          base-coverage-file: report.json

  build:
    name: Build
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Build
        uses: cloudbeds/workflows/.github/actions/npm-install-build@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: cloudbeds/workflows/.github/actions/write-build-info@main
        if: inputs.writeBuildInfo == 'true'
        with:
          artifactPath: ${{ inputs.artifactPath }}
          version: ${{ env.VERSION }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
