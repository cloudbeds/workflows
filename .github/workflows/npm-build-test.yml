# Generic workflow for a push event
# It should be used for all branches except `main` which should use the `*-release` workflow

name: Lint, Test and Build

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
    inputs:
      runner:
        description: The type of runner to use for build and test jobs
        required: false
        default: ubuntu-latest
        type: string
      artifactName:
        description: Name of the build artifact
        required: false
        default: build-artifact
        type: string
      artifactPath:
        description: Destination path for the downloaded build artifact
        required: false
        default: dist
        type: string
      jobName:
        description: Not Used (added during migration from npm-sequential-build-test)
        required: false
        type: string
      ref:
        description: The branch, tag or SHA to checkout. Defaults to the SHA for the event that triggered the workflow.
        required: false
        default: ''
        type: string
      envVars:
        description: List of environment variables to set up, given in VAR=value format.
        required: false
        default: ''
        type: string
      testCoverageAnnotations:
        description: Annotation type for test coverage should be 'all', 'none', 'coverage' or 'failed-tests'
        required: false
        default: coverage
        type: string
      writeBuildInfo:
        description: Whether to write build info to a file
        required: false
        default: false
        type: string
      buildOnly:
        description: Whether to only build the project without lint and test
        required: false
        default: false
        type: string

    outputs:
      appVersion:
        description: App version from package.json
        value: ${{ jobs.build.outputs.appVersion }}

jobs:
  install:
    name: Install
    if: inputs.buildOnly != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Install with npm ci
        uses: cloudbeds/workflows/.github/actions/npm-install@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  lint:
    name: Lint
    if: inputs.buildOnly != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        uses: cloudbeds/workflows/.github/actions/npm-install-lint@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          envVars: ${{ inputs.envVars }}
          ref: ${{ inputs.ref }}

  test:
    name: Test
    if: inputs.buildOnly != 'true'
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 15
    steps:
      - name: Test
        uses: cloudbeds/workflows/.github/actions/npm-install-test@main
        id: test
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          envVars: ${{ inputs.envVars }}
          ref: ${{ inputs.ref }}

      - name: Find Current Pull Request
        if: steps.test.outputs.hasCoverageReport == 'true'
        id: findPr
        uses: jwalton/gh-find-current-pr@v1.3.2

      - name: Report Test Coverage
        if: steps.test.outputs.hasCoverageReport == 'true'
        uses: ArtiomTr/jest-coverage-report-action@v2.2.4
        with:
          prnumber: ${{ steps.findPr.outputs.number }}
          annotations: ${{ inputs.testCoverageAnnotations }}
          coverage-file: report.json
          base-coverage-file: report.json

  build:
    name: Build
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 15
    outputs:
      appVersion: ${{ steps.version-from-package-json.outputs.VERSION }}
    steps:
      - name: Build
        uses: cloudbeds/workflows/.github/actions/npm-install-build@main
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          envVars: ${{ inputs.envVars }}
          ref: ${{ inputs.ref }}

      - id: version-from-package-json
        shell: bash
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - uses: cloudbeds/workflows/.github/actions/write-build-info@main
        if: inputs.writeBuildInfo == 'true'
        with:
          artifactPath: ${{ inputs.artifactPath }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
