# Generic workflow to lint, build, test and publish an npm package
# Suitable for cases when testing should be done on the build artifact

name: Build, Test and Publish npm package

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      CB_CI_WORKFLOW_TOKEN:
        required: true
    inputs:
      runner:
        description: The type of runner to use
        required: false
        default: ubuntu-latest
        type: string
      artifactPath:
        description: Destination path for the downloaded build artifact
        required: false
        default: dist
        type: string
      npmArgs:
        description: Additional arguments to pass to NPM
        type: string
        default: ''
        required: false           

jobs:
  test-and-build:
    name: Lint, Build, Test
    runs-on: ${{ inputs.runner }}
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: cloudbeds/workflows/.github/actions/npm-install@feat/allow-npm-args-in-more-places
        with:
          npmArgs: ${{ inputs.npmArgs }}

      - name: Lint
        run: |
          npm run lint --if-present
          npm run lint:ts --if-present

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm run test --if-present

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ inputs.artifactPath }}

  release:
    name: Publish to NPM ðŸš€
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Semantic Release
        uses: cloudbeds/workflows/.github/actions/semantic-release@feat/allow-npm-args-in-more-places
        with:
          artifactName: build-artifact
          artifactPath: ${{ inputs.artifactPath }}
          publishToNpm: true
          GITHUB_TOKEN: ${{ secrets.CB_CI_WORKFLOW_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          npmArgs: ${{ inputs.npmArgs }}
